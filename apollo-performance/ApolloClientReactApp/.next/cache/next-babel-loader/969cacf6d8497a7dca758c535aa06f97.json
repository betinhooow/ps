{"ast":null,"code":"var _jsxFileName = \"/Users/betinhooow/Downloads/pkellner pluralsight-apollo-managing-performance master 03-Building-Simple-Apollo-Client-clip04-Adding-useQuery-To-ReactApp/ApolloClientReactApp/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { gql, useMutation, useQuery } from '@apollo/client';\nconst GET_SPEAKERS = gql`\n  query {\n    speakers {\n      datalist {\n        id\n        first\n        last\n        favorite\n      }\n    }\n  }\n`;\nconst TOGGLE_SPEAKERS_FAVORITE = gql`\n  mutation toggleSpeakerFavorite($speakerId: Int!){\n    toggleSpeakerFavorite(speakerId: $speakerId){\n      id,\n      first,\n      last,\n      favorite\n    }\n  }\n`;\nconst DELETE_SPEAKERS = gql`\n  mutation deleteSpeaker($speakerId: Int!){\n    deleteSpeaker(speakerId: $speakerId){\n      id,\n      first,\n      last,\n      favorite\n    }\n  }\n`;\n\nconst IndexPage = () => {\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_SPEAKERS);\n  const [toggle] = useMutation(TOGGLE_SPEAKERS_FAVORITE);\n  const [deleteSpeaker] = useMutation(DELETE_SPEAKERS);\n  if (loading === true) return __jsx(\"div\", {\n    className: \"col-sm6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 32\n    }\n  }, \"Loading...\");\n  if (error === true) return __jsx(\"div\", {\n    className: \"col-sm6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 30\n    }\n  }, \"Error\");\n  return __jsx(\"div\", {\n    className: \"container show-fav\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"fav-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, data.speakers.datalist.map(({\n    id,\n    first,\n    last,\n    favorite\n  }) => {\n    return __jsx(\"div\", {\n      className: \"favbox\",\n      key: id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 15\n      }\n    }, __jsx(\"div\", {\n      className: \"fav-clm col-sm-7\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }\n    }, __jsx(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 19\n      }\n    }, first, \" \", last, \" (\", id, \")\")), __jsx(\"div\", {\n      className: \"fav-clm col-sm-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }\n    }, __jsx(\"div\", {\n      className: \"action\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 19\n      }\n    }, __jsx(\"span\", {\n      onClick: () => toggle({\n        variables: {\n          speakerId: parseInt(id)\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }\n    }, __jsx(\"div\", {\n      className: favorite === true ? 'fa fa-star orange' : 'fa fa-star-o orange',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 23\n      }\n    }), \"\\xA0\\xA0 Favorite\"), __jsx(\"span\", {\n      onClick: () => {\n        deleteSpeaker({\n          variables: {\n            speakerId: parseInt(id)\n          },\n          refetchQueries: [{\n            query: GET_SPEAKERS\n          }]\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }\n    }, __jsx(\"i\", {\n      className: \"fa fa-trash red\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 23\n      }\n    }), \" Delete\"))));\n  }))));\n};\n\nexport default IndexPage;","map":{"version":3,"sources":["/Users/betinhooow/Downloads/pkellner pluralsight-apollo-managing-performance master 03-Building-Simple-Apollo-Client-clip04-Adding-useQuery-To-ReactApp/ApolloClientReactApp/pages/index.js"],"names":["gql","useMutation","useQuery","GET_SPEAKERS","TOGGLE_SPEAKERS_FAVORITE","DELETE_SPEAKERS","IndexPage","loading","error","data","toggle","deleteSpeaker","speakers","datalist","map","id","first","last","favorite","variables","speakerId","parseInt","refetchQueries","query"],"mappings":"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","sourcesContent":["import { gql, useMutation, useQuery } from '@apollo/client';\n\nconst GET_SPEAKERS = gql`\n  query {\n    speakers {\n      datalist {\n        id\n        first\n        last\n        favorite\n      }\n    }\n  }\n`;\n\nconst TOGGLE_SPEAKERS_FAVORITE = gql`\n  mutation toggleSpeakerFavorite($speakerId: Int!){\n    toggleSpeakerFavorite(speakerId: $speakerId){\n      id,\n      first,\n      last,\n      favorite\n    }\n  }\n`\n\nconst DELETE_SPEAKERS = gql`\n  mutation deleteSpeaker($speakerId: Int!){\n    deleteSpeaker(speakerId: $speakerId){\n      id,\n      first,\n      last,\n      favorite\n    }\n  }\n`\n\nconst IndexPage = () => {\n  const { loading, error, data } = useQuery(GET_SPEAKERS);\n  const [toggle] = useMutation(TOGGLE_SPEAKERS_FAVORITE);\n  const [deleteSpeaker] = useMutation(DELETE_SPEAKERS);\n\n  if (loading === true) return <div className=\"col-sm6\">Loading...</div>;\n\n  if (error === true) return <div className=\"col-sm6\">Error</div>;\n\n  return (\n    <div className=\"container show-fav\">\n      <div className=\"row\">\n        <div className=\"fav-list\">\n          {data.speakers.datalist.map(({ id, first, last, favorite }) => {\n            return (\n              <div className=\"favbox\" key={id}>\n                <div className=\"fav-clm col-sm-7\">\n                  <h4>\n                    {first} {last} ({id})\n                  </h4>\n                </div>\n                <div className=\"fav-clm col-sm-5\">\n                  <div className=\"action\">\n                    <span onClick={() => toggle({variables: {\n                        speakerId: parseInt(id)\n                      }})}>\n                      <div\n                        className={\n                          favorite === true\n                            ? 'fa fa-star orange'\n                            : 'fa fa-star-o orange'\n                        }\n                      />\n                      &nbsp;&nbsp; Favorite\n                    </span>\n                    <span onClick={() => {\n                      deleteSpeaker({\n                        variables: {speakerId: parseInt(id)},\n                        refetchQueries: [{query: GET_SPEAKERS}]\n                      })\n                    }}>\n                      <i className='fa fa-trash red'></i> Delete\n                    </span>\n                  </div>\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default IndexPage;\n"]},"metadata":{},"sourceType":"module"}