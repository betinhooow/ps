{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _templateObject,\n    _templateObject2,\n    _templateObject3,\n    _templateObject4,\n    _this = this,\n    _jsxFileName = \"/Users/betinhooow/Downloads/pkellner pluralsight-apollo-managing-performance master 03-Building-Simple-Apollo-Client-clip04-Adding-useQuery-To-ReactApp/ApolloClientReactApp/pages/index.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { gql, useMutation, useQuery } from '@apollo/client';\nimport Toolbar from '../components/Toolbar';\nvar GET_SPEAKERS = gql(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  query {\\n    speakers {\\n      datalist {\\n        id\\n        first\\n        last\\n        favorite\\n      }\\n    }\\n  }\\n\"])));\nvar TOGGLE_SPEAKERS_FAVORITE = gql(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n  mutation toggleSpeakerFavorite($speakerId: Int!){\\n    toggleSpeakerFavorite(speakerId: $speakerId){\\n      id,\\n      first,\\n      last,\\n      favorite\\n    }\\n  }\\n\"])));\nvar DELETE_SPEAKERS = gql(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"\\n  mutation deleteSpeaker($speakerId: Int!){\\n    deleteSpeaker(speakerId: $speakerId){\\n      id,\\n      first,\\n      last,\\n      favorite\\n    }\\n  }\\n\"])));\nvar ADD_SPEAKERS = gql(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral([\"\\n  mutation addSpeaker($speakerId: Int!){\\n    addSpeaker(speaker: $speakerId){\\n      id,\\n      first,\\n      last,\\n      favorite\\n    }\\n  }\\n\"])));\n\nvar IndexPage = function IndexPage() {\n  _s();\n\n  var _useQuery = useQuery(GET_SPEAKERS),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  var _useMutation = useMutation(TOGGLE_SPEAKERS_FAVORITE),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      toggle = _useMutation2[0];\n\n  var _useMutation3 = useMutation(DELETE_SPEAKERS),\n      _useMutation4 = _slicedToArray(_useMutation3, 1),\n      deleteSpeaker = _useMutation4[0];\n\n  var _useMutation5 = useMutation(ADD_SPEAKERS),\n      _useMutation6 = _slicedToArray(_useMutation5, 1),\n      addSpeaker = _useMutation6[0];\n\n  if (loading === true) return __jsx(\"div\", {\n    className: \"col-sm6\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 32\n    }\n  }, \"Loading...\");\n  if (error === true) return __jsx(\"div\", {\n    className: \"col-sm6\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 30\n    }\n  }, \"Error\");\n  return __jsx(React.Fragment, null, __jsx(Toolbar, {\n    insertSpeakerEvent: function insertSpeakerEvent(first, last, favorite) {\n      addSpeaker({\n        variables: {\n          first: first,\n          last: last,\n          favorite: favorite\n        }\n      }), refetchQueries;\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }), __jsx(\"div\", {\n    className: \"container show-fav\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"row\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"fav-list\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, data.speakers.datalist.map(function (_ref) {\n    var id = _ref.id,\n        first = _ref.first,\n        last = _ref.last,\n        favorite = _ref.favorite;\n    return __jsx(\"div\", {\n      className: \"favbox\",\n      key: id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }\n    }, __jsx(\"div\", {\n      className: \"fav-clm col-sm-7\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 19\n      }\n    }, __jsx(\"h4\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }\n    }, first, \" \", last, \" (\", id, \")\")), __jsx(\"div\", {\n      className: \"fav-clm col-sm-5\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 19\n      }\n    }, __jsx(\"div\", {\n      className: \"action\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }\n    }, __jsx(\"span\", {\n      onClick: function onClick() {\n        return toggle({\n          variables: {\n            speakerId: parseInt(id)\n          }\n        });\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 23\n      }\n    }, __jsx(\"div\", {\n      className: favorite === true ? 'fa fa-star orange' : 'fa fa-star-o orange',\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 25\n      }\n    }), \"\\xA0\\xA0 Favorite\"), __jsx(\"span\", {\n      onClick: function onClick() {\n        deleteSpeaker({\n          variables: {\n            speakerId: parseInt(id)\n          },\n          refetchQueries: [{\n            query: GET_SPEAKERS\n          }]\n        });\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 23\n      }\n    }, __jsx(\"i\", {\n      className: \"fa fa-trash red\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 25\n      }\n    }), \" Delete\"))));\n  })))));\n};\n\n_s(IndexPage, \"dNjW5c/GQFV5dbNFkblGJ67swOA=\", false, function () {\n  return [useQuery, useMutation, useMutation, useMutation];\n});\n\n_c = IndexPage;\nexport default IndexPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"IndexPage\");","map":{"version":3,"sources":["/Users/betinhooow/Downloads/pkellner pluralsight-apollo-managing-performance master 03-Building-Simple-Apollo-Client-clip04-Adding-useQuery-To-ReactApp/ApolloClientReactApp/pages/index.js"],"names":["gql","useMutation","useQuery","Toolbar","GET_SPEAKERS","TOGGLE_SPEAKERS_FAVORITE","DELETE_SPEAKERS","ADD_SPEAKERS","IndexPage","loading","error","data","toggle","deleteSpeaker","addSpeaker","first","last","favorite","variables","refetchQueries","speakers","datalist","map","id","speakerId","parseInt","query"],"mappings":"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","sourcesContent":["import { gql, useMutation, useQuery } from '@apollo/client';\nimport Toolbar from '../components/Toolbar';\n\nconst GET_SPEAKERS = gql`\n  query {\n    speakers {\n      datalist {\n        id\n        first\n        last\n        favorite\n      }\n    }\n  }\n`;\n\nconst TOGGLE_SPEAKERS_FAVORITE = gql`\n  mutation toggleSpeakerFavorite($speakerId: Int!){\n    toggleSpeakerFavorite(speakerId: $speakerId){\n      id,\n      first,\n      last,\n      favorite\n    }\n  }\n`\n\nconst DELETE_SPEAKERS = gql`\n  mutation deleteSpeaker($speakerId: Int!){\n    deleteSpeaker(speakerId: $speakerId){\n      id,\n      first,\n      last,\n      favorite\n    }\n  }\n`\n\nconst ADD_SPEAKERS = gql`\n  mutation addSpeaker($speakerId: Int!){\n    addSpeaker(speaker: $speakerId){\n      id,\n      first,\n      last,\n      favorite\n    }\n  }\n`\n\nconst IndexPage = () => {\n  const { loading, error, data } = useQuery(GET_SPEAKERS);\n  const [toggle] = useMutation(TOGGLE_SPEAKERS_FAVORITE);\n  const [deleteSpeaker] = useMutation(DELETE_SPEAKERS);\n  const [addSpeaker] = useMutation(ADD_SPEAKERS);\n\n  if (loading === true) return <div className=\"col-sm6\">Loading...</div>;\n\n  if (error === true) return <div className=\"col-sm6\">Error</div>;\n\n  return (\n    <>\n    <Toolbar insertSpeakerEvent={(first, last, favorite) => {\n      addSpeaker({\n        variables: { first, last, favorite }\n      }),\n      refetchQueries\n    }}/>\n      <div className=\"container show-fav\">\n        <div className=\"row\">\n          <div className=\"fav-list\">\n            {data.speakers.datalist.map(({ id, first, last, favorite }) => {\n              return (\n                <div className=\"favbox\" key={id}>\n                  <div className=\"fav-clm col-sm-7\">\n                    <h4>\n                      {first} {last} ({id})\n                    </h4>\n                  </div>\n                  <div className=\"fav-clm col-sm-5\">\n                    <div className=\"action\">\n                      <span onClick={() => toggle({variables: {\n                          speakerId: parseInt(id)\n                        }})}>\n                        <div\n                          className={\n                            favorite === true\n                              ? 'fa fa-star orange'\n                              : 'fa fa-star-o orange'\n                          }\n                        />\n                        &nbsp;&nbsp; Favorite\n                      </span>\n                      <span onClick={() => {\n                        deleteSpeaker({\n                          variables: {speakerId: parseInt(id)},\n                          refetchQueries: [{query: GET_SPEAKERS}]\n                        })\n                      }}>\n                        <i className='fa fa-trash red'></i> Delete\n                      </span>\n                    </div>\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default IndexPage;\n"]},"metadata":{},"sourceType":"module"}