{"ast":null,"code":"var _jsxFileName = \"/Users/betinhooow/Downloads/pkellner pluralsight-apollo-managing-performance master 03-Building-Simple-Apollo-Client-clip04-Adding-useQuery-To-ReactApp/ApolloClientReactApp/pages/_app.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { ApolloClient, ApolloProvider, InMemoryCache } from '@apollo/client';\nexport default function App({\n  Component,\n  pageProps\n}) {\n  const apolloClient = new ApolloClient({\n    uri: 'http://localhost:4000',\n    cache: new InMemoryCache()\n  });\n  return __jsx(ApolloProvider, {\n    client: apolloClient,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }\n  }, __jsx(Component, _extends({}, pageProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/betinhooow/Downloads/pkellner pluralsight-apollo-managing-performance master 03-Building-Simple-Apollo-Client-clip04-Adding-useQuery-To-ReactApp/ApolloClientReactApp/pages/_app.js"],"names":["ApolloClient","ApolloProvider","InMemoryCache","App","Component","pageProps","apolloClient","uri","cache"],"mappings":";;;;;;AAAA,SAASA,YAAT,EAAuBC,cAAvB,EAAuCC,aAAvC,QAA4D,gBAA5D;AAEA,eAAe,SAASC,GAAT,CAAa;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAb,EAAuC;AACpD,QAAMC,YAAY,GAAG,IAAIN,YAAJ,CAAiB;AACpCO,IAAAA,GAAG,EAAE,uBAD+B;AAEpCC,IAAAA,KAAK,EAAE,IAAIN,aAAJ;AAF6B,GAAjB,CAArB;AAKA,SACE,MAAC,cAAD;AAAgB,IAAA,MAAM,EAAEI,YAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD,eAAeD,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,CADF;AAKD","sourcesContent":["import { ApolloClient, ApolloProvider, InMemoryCache } from '@apollo/client';\n\nexport default function App({ Component, pageProps }) {\n  const apolloClient = new ApolloClient({\n    uri: 'http://localhost:4000',\n    cache: new InMemoryCache(),\n  });\n\n  return (\n    <ApolloProvider client={apolloClient}>\n      <Component {...pageProps}></Component>\n    </ApolloProvider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}